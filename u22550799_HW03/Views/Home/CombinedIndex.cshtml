@model u22550799_HW03.Models.firstCombinedViewModel
@using PagedList.Mvc;
@using PagedList

<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>

<body>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <div class="row">
        <div class="col-md-6">
            <div class="border p-3">
                <!-- Left Column with border -->
                <h2>Students</h2>
                <p>
                    <a href="#" class="create-lookup-link" data-url="@Url.Action("Create", "students")">Create</a>
                </p>
                <!--Student table -->
                <table class="table table-responsive" style="width:100%">
                    <!-- Table headers -->
                    <tr>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>BirthDate</th>
                        <th>Gender</th>
                        <th>Class</th>
                        <th>Point</th>
                    </tr>

                    @foreach (var item in Model.students)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.surname)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.birthdate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.@class)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.point)
                            </td>
                            <td class="text-end">
                                <a href="#" class="details-link" data-url="@Url.Action("Details", "students", new { id = item.studentId })">Details</a>
                            </td>
                        </tr>
                    }
                </table>

                <!--Page list for the student table-->
                @Html.PagedListPager(Model.students, studentPages => Url.Action("CombinedIndex", new { studentPages }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
            </div>
        </div>

        <div class="col-md-6">
            <div class="border p-3">
                <!-- Right Column with border -->
                <h2>Books</h2>

                <p>
                    <a href="#" class="create-lookup-link" data-url="@Url.Action("Create", "books")">Create</a>
                </p>
                <!-- Books table -->
                <table class="table table-responsive" style="width:100%">
                    <!-- Table headers -->
                    <tr>
                        <th>Name</th>
                        <th>Page Count</th>
                        <th>Point</th>
                        <th>Status</th>
                        <th>Author Name</th>
                        <th>Type</th>
                    </tr>

                    @foreach (var item in Model.books)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.pagecount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.point)
                            </td>
                            <td>
                                @if (item.borrows.Any(borrow => borrow.broughtDate > DateTime.Now))
                                {
                                    <span class="text-success">Out</span>
                                }
                                else
                                {
                                    <span class="text-danger">Available</span>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.authors.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.types.name)
                            </td>
                            <td class="text-end">
                                <a href="#" class="details-link" data-url="@Url.Action("Details", "books", new { id = item.bookId })">Details</a>
                            </td>
                        </tr>
                    }
                </table>
                <!--For the books table-->
                @Html.PagedListPager(Model.books, bookPages => Url.Action("CombinedIndex", new { bookPages }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
            </div>
        </div>
    </div>
</body>

<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">u22550799_HW03</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        // Function to handle form submission within the modal
        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        // Function to handle other links (details, delete, create) within the modal
        $(".details-link, .create-lookup-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });
    });

</script>
